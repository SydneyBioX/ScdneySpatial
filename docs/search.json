[{"path":"https://sydneybiox.github.io/ScdneySpatial/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Sean Davis Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Unlocking single cell spatial omics analyses with scdney","text":"Understanding interplay different types cells immediate environment critical understanding mechanisms cells function context human diseases. Recent advances high dimensional situ cytometry technologies fundamentally revolutionized ability observe complex cellular relationships providing unprecedented characterisation cellular heterogeneity tissue environment.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"description","dir":"Articles","previous_headings":"Overview","what":"Description","title":"Unlocking single cell spatial omics analyses with scdney","text":"workshop introduce key analytical concepts needed analyse data high dimensional spatial omics technologies , PhenoCycler, IMC, Xenium MERFISH. show functionality Bioconductor packages simpleSeg, FuseSOM, scClassify, scHot, spicyR, listClust, statial, scFeatures ClassifyR can used address various biological hypotheses. end workshop attendees able implement assess key steps spatial analysis pipeline including cell segmentation, feature normalisation, cell type identification, microenvironment cell-state characterisation, spatial hypothesis testing patient classification. Understanding key steps provide attendees core skills needed interrogate comprehensive spatial information generated exciting new technologies.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"pre-requisites","dir":"Articles","previous_headings":"Overview","what":"Pre-requisites","title":"Unlocking single cell spatial omics analyses with scdney","text":"expected students : basic knowledge R syntax, workshop provide -depth description cell-resolution spatial omics technologies.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"r-bioconductor-packages-used","dir":"Articles","previous_headings":"Overview","what":"R / Bioconductor packages used","title":"Unlocking single cell spatial omics analyses with scdney","text":"Several single cell R packages used scdney package, information visit: https://sydneybiox.github.io/scdney/.","code":""},{"path":[]},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"learning-objectives","dir":"Articles","previous_headings":"Overview","what":"Learning objectives","title":"Unlocking single cell spatial omics analyses with scdney","text":"Understand visualise spatial omics datasets. Identify key biological questions can addressed technologies spatial analysis. Understand key analytical steps involved spatial omics analysis, perform steps using R. Evaluate performance data normalisation cell segmentation. Understand generate individual feature representations spatial omics data. Develop appreciation assess performance classification models. Perform disease outcome prediction using feature representation robust classification framework.","code":""},{"path":[]},{"path":[]},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"installation","dir":"Articles","previous_headings":"Workshop > Setup","what":"Installation","title":"Unlocking single cell spatial omics analyses with scdney","text":"","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(c( \"simpleSeg\", \"cytomapper\", \"scClassify\", \"scHOT\", \"FuseSOM\",\"glmnet\", \"spicyR\", \"lisaClust\",\"Statial\", \"scFeatures\", \"ClassifyR\", \"tidyverse\", \"scater\", \"SingleCellExperiment\", \"STexampleData\", \"SpatialDatasets\", \"tidySingleCellExperiment\", \"scuttle\", \"batchelor\"))"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"download-datasets","dir":"Articles","previous_headings":"Workshop > Setup","what":"Download datasets","title":"Unlocking single cell spatial omics analyses with scdney","text":"Please download datasets start workshop","code":"#Download data now spe <- STexampleData::seqFISH_mouseEmbryo() kerenSPE = SpatialDatasets::spe_Keren_2018()"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"load-packages","dir":"Articles","previous_headings":"Workshop > Setup","what":"Load packages","title":"Unlocking single cell spatial omics analyses with scdney","text":"","code":"# library(ScdneySpatial)  # packages from scdney library(ClassifyR) library(FuseSOM) library(lisaClust) library(scClassify) library(scFeatures)  library(scHOT) library(simpleSeg) library(SpatialDatasets) library(spicyR) library(Statial)  # Other required packages library(BumpyMatrix) library(cytomapper) library(batchelor) library(ggplot2) library(ggsurvfit) library(glmnet) library(plotly) library(reshape) library(scater) library(scuttle) library(SingleCellExperiment) library(STexampleData) library(tidySingleCellExperiment) library(tidyverse)  theme_set(theme_classic())  nCores <- 8  # Feel free to parallelise things if you have the cores to spare. BPPARAM <- simpleSeg:::generateBPParam(nCores) source(system.file(\"extdata\", \"celltype_colours.R\", package = \"ScdneySpatial\")) options(\"restore_SingleCellExperiment_show\" = TRUE)"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"module-1-data-exploration","dir":"Articles","previous_headings":"Workshop","what":"Module 1: Data exploration","title":"Unlocking single cell spatial omics analyses with scdney","text":"workshop, working two datasets explore biological phenotypes, cellular interactions, patterns gene expression correlated disease. datasets used different contexts, hopefully contexts representative scenarios encounter datasets. use two motivating datasets: Keren et al, 2018: multiplexed ion beam imaging time--flight (MIBI-TOF) dataset profilining tissue triple-negative breast cancer patients. primary question address dataset can predict risk cancer recurrence overall survival time based imaging data? Lohoff et al, 2022: seqFISH study early mouse organogenesis. use subset data made available STExampleData package. primary question address dataset can identify key transcriptomic drivers developing brain? purpose section primarily introduce SpatialExperiment class used store information imaging experiments R. goal get comfortable enough manipulating exploring objects can progress remainder workshop comfortably. download dataset stored STexampleData R package, examine structure, visualise data perform exploratory analyses.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"spatial-transcriptomics---seqfish-mouse-embryo","dir":"Articles","previous_headings":"Workshop > Module 1: Data exploration","what":"Spatial transcriptomics - SeqFISH mouse embryo","title":"Unlocking single cell spatial omics analyses with scdney","text":"download seqFISH mouse embryo data. comes format SpatialExperiment object, summarized information imaging dataset can compiled accessed relative ease. can use functions designed SingleCellExperiment objects scater package plotting via reducedDim slot. multiply spatial coordinates matrix flip y-axis ensure fix aspect ratio. Questions many cells data? many genes? Plot gene expression mapping point size cell area. can perform typical gene-expression based analysis data. Later part two perform specific analytical techniques, now let’s explore dataset use methods designed single cell data. Typically single-cell data analysis, perform dimension reduction project high dimensional cell x gene matrix 2D space. allows us visualise various things interest, distribution cell types disease outcomes. , see cells segregated expression Sox2. Advanced/Extension Question considerations need made batch correction spatial data? assumptions made /broken? check ? Check ggiraph package extending g_all object interactive plot tooltip links spatial UMAP coordinate systems. (Hint: may involve generating new ggplot object outside plotReducedDim function.)","code":"#spe <- STexampleData::seqFISH_mouseEmbryo() spe spe <- logNormCounts(spe) coord_transform <- matrix(c(1,0,0,-1), 2, 2, byrow = TRUE) reducedDim(spe, \"spatialCoords\") <- spatialCoords(spe) %*% coord_transform plotReducedDim(spe, \"spatialCoords\", colour_by = c(\"Sox2\"), point_size = 1) +   coord_fixed() # try to answer the above question using the spe object.  # you may want to check the SingleCellExperiment vignette. # https://bioconductor.org/packages/3.17/bioc/vignettes/SingleCellExperiment/inst/doc/intro.html spe <- runPCA(spe)  b.out <- batchelor::batchCorrect(spe, batch = spe$pos, assay.type = \"logcounts\", PARAM=FastMnnParam(d=20)) reducedDim(spe, \"FastMnn\") <- reducedDim(b.out, \"corrected\") spe <- runUMAP(spe, dimred = \"FastMnn\") spe  g_celltype_umap <- plotReducedDim(spe, \"UMAP\", colour_by = \"celltype_mapped_refined\") +    scale_colour_manual(values = celltype_colours) g_celltype_umap  plotReducedDim(spe, \"UMAP\", colour_by = \"Sox2\")  g_celltype_spatial <- plotReducedDim(spe, \"spatialCoords\", colour_by = \"celltype_mapped_refined\") +    scale_colour_manual(values = celltype_colours) +    coord_fixed()  g_all <- g_celltype_spatial + theme(legend.position = \"none\") + g_celltype_umap g_all # try to examine answer the above questions using the spe object.  # you may want to set up some small simulation.."},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"spatial-proteomics---mibi-tof-breast-cancer","dir":"Articles","previous_headings":"Workshop > Module 1: Data exploration","what":"Spatial proteomics - MIBI-TOF breast cancer","title":"Unlocking single cell spatial omics analyses with scdney","text":"part scdney package infrastructure, provide several pre-processed datasets can loaded SpatialDatasets package. , ’ve loaded MIBI-TOF triple negative breast cancer data Keren et al. SpatialExperiment object. start analysis, often good explore data get sense complexity. can exploring distribution outcomes variables patients’ meta-data. Try starting exploration answering questions. Questions many cells data? many markers? many images? , can perform dimension reduction visualize dataset 2D plane. Questions Visualise UMAP using plotReducedDim function colour UMAP cellType. UMAP tell us? observations make coloured imageID?","code":"# Load in Keren et al. data. #kerenSPE = SpatialDatasets::spe_Keren_2018()   # Remove cold tumour types and patients with missing survival data. kerenSPE = kerenSPE |>    filter(tumour_type != \"cold\",          !is.na(`Survival_days_capped.`)) |>    mutate(event = 1 - Censored)  colData(kerenSPE)$x <- spatialCoords(kerenSPE)[,1] colData(kerenSPE)$y <- spatialCoords(kerenSPE)[,2]  reducedDim(kerenSPE, \"spatialCoords\") <- spatialCoords(kerenSPE)  kerenSPE # try to answer the above question using the imc object.  # you may want to check the SpatialExperiment vignette. # https://www.bioconductor.org/packages/release/bioc/vignettes/SpatialExperiment/inst/doc/SpatialExperiment.html set.seed(51773) kerenSPE <- scater::runUMAP(kerenSPE, exprs_values = \"intensities\", name = \"UMAP\")   # try to answer the question here!"},{"path":[]},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-i-load-my-images-into-r","dir":"Articles","previous_headings":"Workshop > Module 2: Cell segmentation","what":"How do I load my images into R?","title":"Unlocking single cell spatial omics analyses with scdney","text":"load images use loadImages function cytomapper, use patient 5 image Keren et al. example. Questions class image5? Hint: class() many images markers image5? Challenge: dimension image5 image?","code":"imageLocation <- system.file(\"extdata\", \"kerenPatient5.tiff\", package = \"ScdneySpatial\") image5 = cytomapper::loadImages(   x = imageLocation,   as.is = TRUE #Needed as 8-bit image )  mcols(image5) = data.frame(list(\"imageID\" = \"kerenPatient5\"))  # Setting the channel names according to orginal paper.  channelNames(image5) = c(\"Au\", \"Background\", \"Beta catenin\", \"Ca\", \"CD11b\", \"CD11c\", \"CD138\", \"CD16\", \"CD20\", \"CD209\", \"CD3\", \"CD31\", \"CD4\", \"CD45\", \"CD45RO\", \"CD56\", \"CD63\", \"CD68\", \"CD8\", \"dsDNA\", \"EGFR\", \"Fe\", \"FoxP3\", \"H3K27me3\", \"H3K9ac\", \"HLA_Class_1\", \"HLA_DR\", \"IDO\", \"Keratin17\", \"Keratin6\", \"Ki67\", \"Lag3\", \"MPO\", \"Na\", \"P\", \"p53\", \"Pan-Keratin\", \"PD-L1\", \"PD1\", \"phospho-S6\", \"Si\", \"SMA\", \"Ta\", \"Vimentin\") # Answer questions here"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-i-visualise-my-images","dir":"Articles","previous_headings":"Workshop > Module 2: Cell segmentation","what":"How do I visualise my images?","title":"Unlocking single cell spatial omics analyses with scdney","text":"can visualise image see read . Lets highlight 4 markers. can manipulate brightness, contrast gamma levels follows. See can better job.","code":"# Visualise segmentation performance another way. cytomapper::plotPixels(   image = image5[1],   colour_by = c(\"CD45\", \"Pan-Keratin\", \"SMA\", \"dsDNA\"),   colour = list(     CD45 = c(\"black\", \"blue\"),     `Pan-Keratin` = c(\"black\", \"yellow\"),     SMA = c(\"black\", \"green\"),     dsDNA = c(\"black\", \"red\")   ) ) # Visualise segmentation performance another way. cytomapper::plotPixels(   image = image5[1],   colour_by = c(\"CD45\", \"Pan-Keratin\", \"SMA\", \"dsDNA\"),   display = \"single\",   colour = list(     CD45 = c(\"black\", \"red\"),     `Pan-Keratin` = c(\"black\", \"yellow\"),     SMA = c(\"black\", \"green\"),     dsDNA = c(\"black\", \"blue\")   )   ,   # Adjust the brightness, contrast and gamma of each channel.   bcg = list(     CD45 = c(0, 4, 1),     `Pan-Keratin` = c(0, 3, 1),     SMA = c(0, 2, 1),     dsDNA = c(0, 2, 1)   ),   legend = NULL )"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"can-we-identify-the-cells-in-the-image","dir":"Articles","previous_headings":"Workshop > Module 2: Cell segmentation","what":"Can we identify the cells in the image?","title":"Unlocking single cell spatial omics analyses with scdney","text":"EBImage package Bioconductor provides lot useful functions manipulating imaging data R. includes functionality finding cells, process called cell segmentation. Lets work example vignette. use functionality complements ’ve already learnt. start loading images nuclei cell bodies. visualize cells overlay images green blue channel false-color image. Notice, display can zoom! next segment nuclei. nuc channel contains fluorescent intensities protein expressed nuclei cells. First create nuclei mask threshold channel separate signal noise clean morphological operations. identify single nuclei using bwlabel. Questions understand nmask ? seeing table(nmask) happens using colorLabels() display? Next, use segmented nuclei seeds perform Voronoi segmentation cytoplasm. can visualise segmentations paintObjects.","code":"nuc = readImage(system.file('images', 'nuclei.tif', package='EBImage'))  cel = readImage(system.file('images', 'cells.tif', package='EBImage'))   cells = rgbImage(green=1.5*cel, blue=nuc)  display(cells, all = TRUE) nmask = thresh(nuc, w=10, h=10, offset=0.05) nmask = opening(nmask, makeBrush(5, shape='disc')) nmask = fillHull(nmask) nmask = bwlabel(nmask)  display(nmask, all=TRUE) ctmask = opening(cel>0.1, makeBrush(5, shape='disc')) cmask = propagate(cel, seeds=nmask, mask=ctmask)  display(ctmask, all=TRUE) segmented = paintObjects(cmask, cells, col='#ff00ff') segmented = paintObjects(nmask, segmented, col='#ffff00')  display(segmented, all=TRUE)"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"can-we-do-this-in-one-step","dir":"Articles","previous_headings":"Workshop > Module 2: Cell segmentation","what":"Can we do this in one step?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Images stored list CytoImageList can segmented using simpleSeg. simpleSeg identify nuclei image using dsDNA, H3K27me3 H3K9ac channel. estimate cell body cells simply dilate nuclei 3 pixels. also specified channels sqrt transformed, 99th quantile values removed ensure segmentation affected outliers. can visualise segmentations using display colorLabels functions EBImage.","code":"# Generate segmentation masks masks <- simpleSeg(   image5,   nucleus = c(\"dsDNA\", \"H3K27me3\", \"H3K9ac\"),   cellBody = \"dilate\",    transform = c(\"sqrt\", \"norm99\"),   sizeSelection = 40,   smooth = 3,   discSize = 3,   cores = nCores )"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"is-this-segmentation-appropriate","dir":"Articles","previous_headings":"Workshop > Module 2: Cell segmentation","what":"Is this segmentation appropriate?","title":"Unlocking single cell spatial omics analyses with scdney","text":"One way assess segmentation appropriate look. now know two ways . plotPixels function cytomapper makes easy overlay masks top intensities markers image. can s Using table function R can measure pixel area cell plot histogram. dataset 1 µm equivalent \\(2.56\\) pixels, can transform pixel area cell physical area dividing pixel area \\(2.56^2\\). can see majority cells just \\(100µm^2\\), decide whether appropriate size based knowledge cell types imaged. Questions segmentations look better parameters used? Hint: use help function see parameters available simpleSeg. one image , check quality 100 images?","code":"# Visualise segmentation performance one way. masks[[1]] |>    EBImage::colorLabels() |>    EBImage::display() # Visualise segmentation performance another way. cytomapper::plotPixels(   image = image5[1],   mask = masks[1],   img_id = \"imageID\",   colour_by = c(\"CD45\", \"Pan-Keratin\", \"SMA\", \"dsDNA\"),   display = \"single\",   colour = list(     CD45 = c(\"black\", \"red\"),     `Pan-Keratin` = c(\"black\", \"yellow\"),     SMA = c(\"black\", \"green\"),     dsDNA = c(\"black\", \"blue\")   ),   # Adjust the brightness, contrast and gamma of each channel.   bcg = list(     CD45 = c(0, 4, 1),     `Pan-Keratin` = c(0, 3, 1),     SMA = c(0, 2, 1),     dsDNA = c(0, 4, 1)   ),   legend = NULL ) # Get area of every cell cellSize = table(masks[[1]])/(2.56^2)  # Filter out first index, which represents background cellSize[2:length(cellSize)] |>    hist(breaks = 30,        xlab = \"Pixel area of cell (µm^2)\",        main = NULL)"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"im-happy-with-my-segmentation-how-do-i-create-an-spe-object","dir":"Articles","previous_headings":"Workshop > Module 2: Cell segmentation","what":"Im happy with my segmentation, how do I create an SPE object?","title":"Unlocking single cell spatial omics analyses with scdney","text":"segmentation masks can convert image SpatialExperiment object using measureObjects function cytomapper. measureObjects find center cell represent cell x y coordinate. addition average marker expression within cell summarised stored assays object SpatialExperiment. NOTE: using segmentation tools softwares, can import masks tiffs R use measureObjects create SpatialExperiment.","code":"# Summarise the expression of each marker in each cell cells <- cytomapper::measureObjects(   mask = masks,   image = image5,   feature_types = c(\"basic\", \"moment\"),   basic_feature = \"mean\",   moment_feature = c(\"cx\", \"cy\"),   img_id = \"imageID\",   BPPARAM = BPPARAM )   cells"},{"path":[]},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"are-the-intensities-of-markers-consistent-across-images","dir":"Articles","previous_headings":"Workshop > Module 3: Feature normalisation","what":"Are the intensities of markers consistent across images?","title":"Unlocking single cell spatial omics analyses with scdney","text":"moving onto annotating cell types, check marker intensities cell require transformation normalisation. examine distribution CD45 cell across images, general marker immune cells. can see intensity CD45 looks skewed.","code":"# Joining the marker information with the cell information proteinIntensities = kerenSPE |>    join_features(features = rownames(kerenSPE), shape = \"wide\", assay = \"intensities\")  # View the density of CD45 across all images. ggplot(proteinIntensities, aes(x = CD45, colour = imageID)) +   geom_density() +   theme(legend.position = \"none\")"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-can-i-transform-and-normalise-my-data","dir":"Articles","previous_headings":"Workshop > Module 3: Feature normalisation","what":"How can I transform and normalise my data?","title":"Unlocking single cell spatial omics analyses with scdney","text":"can transform normalise data using normalizeCells function simpleSeg. taken intensities intensities assay, performed asinh transform, image trimmed 99 quantile min-max scaled 0-1. addition performed principle component analysis, regressed first PC. modified data stored normIntensities assay. can see distribution CD45 looks much less skewed . Questions CD3 marker characterises T cells, plot distribution CD3. look like? tell us T cells dataset. set cellType == \"CD4_T_cell\" concordant conclusion made question 1.","code":"kerenSPE <- normalizeCells(   cells = kerenSPE,   transformation = \"asinh\",   method = c(\"trim99\", \"minMax\", \"PC1\"),   assayIn = \"intensities\",   assayOut = \"normIntensities\",   cores = nCores )   normProteinIntensities = kerenSPE |>    join_features(features = rownames(kerenSPE), shape = \"wide\", assay = \"normIntensities\")  ggplot(normProteinIntensities, aes(x = CD3, colour = imageID)) +   geom_density() +   theme(legend.position = \"none\") # Answer question here"},{"path":[]},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"can-we-use-a-clustering-approach-to-identify-cell-types","dir":"Articles","previous_headings":"Workshop > Module 4: Cell type annotation","what":"Can we use a clustering approach to identify cell types?","title":"Unlocking single cell spatial omics analyses with scdney","text":"cluster using runFuseSOM function FuseSOM. chosen specify subset markers used original manuscript gating cell types. also specified number clusters identify numClusters = 17.","code":"useMarkers = c(\"CD45\", \"FoxP3\", \"CD4\", \"CD8\", \"CD3\", \"CD20\", \"CD16\", \"CD68\", \"MPO\", \"HLA.DR\", \"Pan.Keratin\", \"Keratin17\", \"Keratin6\", \"p53\", \"Beta.catenin\", \"EGFR\")  set.seed(51773)  kerenSPE <- runFuseSOM(   kerenSPE,   markers = useMarkers,   assay = \"normIntensities\",   numClusters = 17 )"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-i-interpret-my-clusters","dir":"Articles","previous_headings":"Workshop > Module 4: Cell type annotation","what":"How do I interpret my clusters?","title":"Unlocking single cell spatial omics analyses with scdney","text":"can begin process understanding cell clusters using plotGroupedHeatmap function scater. Questions captured distinct cell populations? Can identify clusters? Run code compare cell types dataset clusters identified. clusters compare? clusters combined?","code":"scater::plotGroupedHeatmap(   kerenSPE,   features = useMarkers,   group = \"clusters\",   exprs_values = \"normIntensities\",   center = TRUE,   scale = TRUE,   zlim = c(-3, 3),   cluster_rows = FALSE ) # Type your answer here   # Question 2 code regionMap(kerenSPE, cellType = \"clusters\", region = \"cellType\") +   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +   labs(x = \"Cell types in data\", y = \"Our clusters\")"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"what-is-an-appropriate-number-of-clusters","dir":"Articles","previous_headings":"Workshop > Module 4: Cell type annotation","what":"What is an appropriate number of clusters?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Great question! right answer , however several statistics can used estimate “true” number clusters. can use estimateNumCluster optiPlot functions FuseSOM examine choice 17 clusters reasonable. use gap statistic, methods jump, slope, silhouette within cluster distance (wcd) also available. Finally can run UMAP examine distinct clusters one another. Questions UMAP compare original UMAP?","code":"kerenSPE <- estimateNumCluster(kerenSPE, kSeq = 2:30) optiPlot(kerenSPE, method = \"gap\")  kerenSPE@metadata$clusterEstimation$Discriminant set.seed(51773) # Perform dimension reduction using UMP. kerenSPE <- scater::runUMAP(   kerenSPE,   subset_row = useMarkers,   exprs_values = \"normIntensities\",   name = \"normUMAP\" )    # UMAP by cell type cluster. scater::plotReducedDim(   kerenSPE,   dimred = \"normUMAP\",   colour_by = \"clusters\" ) # Answer question here."},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"what-if-i-dont-have-an-expert-to-annotate-my-cell-types","dir":"Articles","previous_headings":"Workshop > Module 4: Cell type annotation","what":"What if I don’t have an expert to annotate my cell types?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Cell type clustering may difficult without aid domain experts know many cell types expect able annotate clusters. Cell type classification alternative approach clustering annotates cell types based expert labeled reference dataset. use scClassify. use intensities cell type annotations kerenSPE dataset predict cell types image 5. scClassify first constructs cell type tree training dataset, cells organised hierarchy increasingly fined tuned annotations, use HOPACH method construct tree. tree constructed using proteins differentially expressed one cell type cells, identified using limma. annotate cells unlabeled dataset, unlabeled cells projected lower dimensional space weighted KNN (WKNN) used classify unlabeled cells closest neighbours using pearson correlation distance metric. save time preloaded scClassify results, can view hierarchical tree constructed scClassify. look predictions, can observe cells belonging multiple cell types. represent cells classified parent populations hierarchical tree. clean names make plotting easier. can compare original labels classified labels get sense concordant predictions . can see, around 68% cell types identical labels original classified cell types.","code":"# Splitting data to train and test sets kerenSPE_train = kerenSPE |>    filter(imageID != 5)  kerenSPE_test = kerenSPE |>    filter(imageID == 5 )   # Converting intensities to dgCMatrix train_intensities = assay(kerenSPE_train, \"intensities\") |>     as.matrix() |>    as( \"dgCMatrix\")   test_intensities = assay(kerenSPE_test, \"intensities\") |>     as.matrix() |>    as( \"dgCMatrix\") scClassifyResults = scClassify(exprsMat_train = train_intensities,                              cellTypes_train = kerenSPE_train$cellType,                             exprsMat_test = list(keren5 = test_intensities),                             tree = \"HOPACH\",                             algorithm = \"WKNN\",                             selectFeatures = c(\"limma\"),                             similarity = c(\"pearson\"),                             returnList = FALSE,                             verbose = FALSE,                             BPPARAM = BPPARAM) load(system.file(\"extdata\", \"scClassifyResults.rda\", package = \"ScdneySpatial\"))   plotCellTypeTree(cellTypeTree(scClassifyResults$trainRes)) classifiedCellTypes = scClassifyResults$testRes$keren5$pearson_WKNN_limma$predRes  table(classifiedCellTypes)  newCellTypes = case_when(   classifiedCellTypes == \"Keratin_Tumour_Unidentified_Other_Immune_Endothelial_Mesenchymal_Tumour\" ~ \"Tumour_parent\",   classifiedCellTypes == \"Other_Immune_Endothelial_Mesenchymal\" ~ \"Structural_parent\",   classifiedCellTypes == \"Macrophages_Mono_or_Neu\" ~ \"Monocyte_subparent\",   classifiedCellTypes == \"DC_or_Mono_Macrophages_Mono_or_Neu\" ~ \"Monocyte_parent\",   classifiedCellTypes == \"dn_T_CD3_B_cell_CD4_T_cell_DC_or_Mono_Macrophages_CD8_T_cell_Mono_or_Neu_Neutrophils_NK_DC_Tregs\" ~ \"Immune_parent\",   classifiedCellTypes == \"dn_T_CD3_CD4_T_cell_CD8_T_cell\" ~ \"Tcell_parent\",   classifiedCellTypes == \"Endothelial_Mesenchymal\" ~ \"Structural_parent\",   classifiedCellTypes == \"dn_T_CD3_B_cell_CD4_T_cell_CD8_T_cell\" ~ \"Lymphocytes_parent\",   TRUE ~ classifiedCellTypes )  kerenSPE_test$classifiedCellTypes = newCellTypes   (kerenSPE_test$cellType == kerenSPE_test$classifiedCellTypes) |>    mean()"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"viewing-images","dir":"Articles","previous_headings":"Workshop > Module 4: Cell type annotation","what":"Viewing images","title":"Unlocking single cell spatial omics analyses with scdney","text":"can look distribution cells image. compare clusters classified cell types cell types dataset. Questions Discuss amongst peers, might differences clusters, classified cell types original cell type labels dataset?","code":"reducedDim(kerenSPE, \"spatialCoords\") <- spatialCoords(kerenSPE)  kerenSPE |>    filter(imageID == \"5\") |>    plotReducedDim(\"spatialCoords\", colour_by = \"clusters\") +   ggtitle(\"Our clusters\")   reducedDim(kerenSPE_test, \"spatialCoords\") = spatialCoords(kerenSPE_test)  kerenSPE_test |>    plotReducedDim(\"spatialCoords\", colour_by = \"classifiedCellTypes\")     kerenSPE |>    filter(imageID == \"5\") |>    plotReducedDim(\"spatialCoords\", colour_by = \"cellType\") +   ggtitle(\"Original cell types\")    # Comparing orignal cell types to clustering and classification cell types.  regionMap(kerenSPE, cellType = \"clusters\", region = \"cellType\") +   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +   ggtitle(\"Original vs Clustered\")    regionMap(kerenSPE_test, cellType = \"classifiedCellTypes\", region = \"cellType\") +   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +   ggtitle(\"Original vs Classified\")"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"module-5-single-sample-analysis","dir":"Articles","previous_headings":"Workshop","what":"Module 5: Single sample analysis","title":"Unlocking single cell spatial omics analyses with scdney","text":"module focus examining gene expression patterns single image, SeqFISH mouse embryo dataset.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"are-there-genes-which-change-expression-across-space","dir":"Articles","previous_headings":"Workshop > Module 5: Single sample analysis","what":"Are there genes which change expression across space?","title":"Unlocking single cell spatial omics analyses with scdney","text":"ask gene patterns observe changing across spe$gutRegion cell type space. Note want assess anatomical region corresponding anterior end developing gut developing brain first subset cells using spatial coordinates. can check selected plotting. Let’s subset data cells continue scHOT analysis. select genes least proportion expressed cells testing, create scHOT object. now add testing scaffold scHOT object, set local weight matrix testing, choice span 0.1 (proportion cells weight around cell). can speed computation requiring weight matrix correspond every individual cell, instead random selection among cells using thin function. given cell can visually examine local weight given span parameter. Question results change span increased/decreased? set higher order function weighted mean function, calculate observed higher order test statistics. may take around 10 seconds. Now can plot overall mean versus scHOT statistic observe relationship. Labels can interactively visualised using ggplotly. genes may different distributions turn permutation testing assess statistical significance. Set permutation testing schema. purposes workshop set low number permutations low number genes testing scaffold, may want change work workshop . testing take minutes run, parallel parameters set beginning document. permutation test can estimate P-values across genes. can now examine spatial expression 5 significant genes, scHOT object original spe object. noting genes found statistically significant spatial variation local mean expression. genes point specific patterns govern development individual parts gut tube. Advanced/Extended Questions perform testing multiple distinct samples? scHOT developed higher order testing mind, use associated vignette get towards assessing changes variation correlation structure space.","code":"# Filter cells which are labeled gut tub, and in the anterior section. spe$gutRegion <- spe$celltype_mapped_refined == \"Gut tube\" &   reducedDim(spe, \"spatialCoords\")[,1] < -0.5  plotReducedDim(spe, \"spatialCoords\", colour_by = \"gutRegion\") +    coord_fixed() +    scale_colour_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"grey\")) spe_gut <- spe[,spe$gutRegion] spe_gut hist(rowMeans(counts(spe_gut)>0), 40)  gene_to_test <- as.matrix(c(rownames(spe_gut[rowMeans(counts(spe_gut)>0) > 0.2,]))) length(gene_to_test)  rownames(gene_to_test) <- apply(gene_to_test, 1, paste0, collapse = \"_\") head(gene_to_test)  scHOT_spatial <- scHOT_buildFromSCE(spe_gut,                                     assayName = \"logcounts\",                                     positionType = \"spatial\",                                     positionColData = c(\"x_global_affine\", \"y_global_affine\"))  scHOT_spatial scHOT_spatial <- scHOT_addTestingScaffold(scHOT_spatial, gene_to_test) head(scHOT_spatial@testingScaffold)  scHOT_spatial <- scHOT_setWeightMatrix(scHOT_spatial, span = 0.2) scHOT_spatial@weightMatrix <- thin(scHOT_spatial@weightMatrix, n = 50)  dim(slot(scHOT_spatial, \"weightMatrix\")) cellID = 10  df <- cbind(as.data.frame(colData(scHOT_spatial)),       W = slot(scHOT_spatial, \"weightMatrix\")[cellID,])  ggplot(df,        aes(x = x_global_affine, y = -y_global_affine)) +   geom_point(aes(colour = W, size = W)) +   scale_colour_gradient(low = \"black\", high = \"purple\") +   scale_size_continuous(range = c(0.5,2.5)) +   theme_classic() +   guides(colour = guide_legend(title = \"Spatial Weight\"),          size = guide_legend(title = \"Spatial Weight\")) +   ggtitle(paste0(\"Central cell: \", cellID)) +    coord_fixed() +   NULL ## Make associated changes to the code to test out the question above. scHOT_spatial <- scHOT_calculateGlobalHigherOrderFunction(     scHOT_spatial,     higherOrderFunction = weightedMean,     higherOrderFunctionType = \"weighted\")  slot(scHOT_spatial, \"scHOT_output\")  scHOT_spatial <- scHOT_calculateHigherOrderTestStatistics(     scHOT_spatial, na.rm = TRUE) g <- ggplot(as.data.frame(scHOT_spatial@scHOT_output),             aes(x = globalHigherOrderFunction, y = higherOrderStatistic, label = gene_1)) +    xlab(\"Mean across all cells\") +   ylab(\"scHOT statistic for local weightedMean\") +   geom_point() g ggplotly(g) scHOT_spatial <- scHOT_setPermutationScaffold(scHOT_spatial,                                               numberPermutations = 50,                                               numberScaffold = 30)  scHOT_spatial <- scHOT_performPermutationTest(     scHOT_spatial,     verbose = TRUE,     parallel = FALSE)  slot(scHOT_spatial, \"scHOT_output\") scHOT_plotPermutationDistributions(scHOT_spatial)  scHOT_spatial <- scHOT_estimatePvalues(scHOT_spatial,                                        nperm_estimate = 100,                                        maxDist = 0.1) slot(scHOT_spatial, \"scHOT_output\") output_sorted <- slot(scHOT_spatial, \"scHOT_output\")[order(slot(scHOT_spatial,                                                                 \"scHOT_output\")$pvalEstimated),] topgenes <- rownames(output_sorted)[1:5]  reducedDim(scHOT_spatial, \"spatialCoords\") <- reducedDim(spe, \"spatialCoords\")[colnames(scHOT_spatial),]  for (topgene in topgenes) {   g_spe <- plotReducedDim(spe, \"spatialCoords\", colour_by = c(topgene), point_size = 1) +     coord_fixed()      g_scHOT <- plotReducedDim(scHOT_spatial, \"spatialCoords\", colour_by = c(topgene), point_size = 1,                            by_exprs_values = \"expression\") +     coord_fixed()      g_all <- g_scHOT + g_spe   print(g_all) } ## try some code"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"module-6-multi-sample-analysis","dir":"Articles","previous_headings":"Workshop","what":"Module 6: Multi-sample analysis","title":"Unlocking single cell spatial omics analyses with scdney","text":"following module examine can extract different spatial molecular features multi-sample datasets. features can used extract biological understanding. use MIBI-TOF breast cancer dataset.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"can-i-measure-if-two-cell-types-are-co-localised","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis","what":"Can I measure if two cell types are co-localised?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Kontextual part Statial package models spatial relationships cells context hierarchical cell lineage structures. assessing spatial relationships pairs cells context related cell types, Kontextual provides robust quantification cell type relationships invariant changes tissue structure. purposes using Kontextual define cell functions identified clusters cells, larger clusters represent “parent” cell population, finer sub-clusters representing “child” cell population particular function. example, CD4+ T cells highly specified function, may considered child larger parent population T cells. Kontextual thus aims quantify localisation patterns child population cells deviate spatial behaviour parent population, cellular function defines spatial localisation.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"cell-type-hierarchy","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Can I measure if two cell types are co-localised?","what":"Cell type hierarchy","title":"Unlocking single cell spatial omics analyses with scdney","text":"key input Kontextual annotation cell type hierarchies. need organise cells present cell state populations clusters, e.g. different B cell types put vector called bcells. make lives easier, start defining . ’m happy talk use bioconductor package treekoR define hierarchies data driven way.","code":"# Set up cell populations  tumour <- c(\"Keratin_Tumour\", \"Tumour\")  bcells <- c(\"B_cell\") tcells <- c(\"dn_T_cell\", \"CD4_T_cell\", \"CD8_T_cell\", \"Tregs\") myeloid <- c(\"Dc_or_Mono\", \"DC\", \"Mono_or_Neu\", \"Macrophages\", \"Other_Immune\", \"Neutrophils\")  endothelial <- c(\"Endothelial\") mesenchymal <- c(\"Mesenchymal\")  tissue <- c(endothelial, mesenchymal) immune <- c(bcells, tcells, myeloid, \"NK\")   all <- c(tumour, tissue, immune, \"Unidentified\")"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"do-p53-tumour-cells-exhibit-a-different-spatial-behaviour-compared-to-all-tumour-cells","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Can I measure if two cell types are co-localised?","what":"Do p53+ tumour cells exhibit a different spatial behaviour compared to all tumour cells?","title":"Unlocking single cell spatial omics analyses with scdney","text":"examine image highlighted Keren et al. 2018 manuscript relationship two cell types depends parent cell population. image 6 Keren et al. dataset, can see p53+ tumour cells immune cells dispersed. However behaviour p53+ tumour cells placed context spatial behaviour broader parent population tumour cells, p53+ tumour cells immune appear localised.","code":"# Lets define a new cell type vector kerenSPE$cellTypeNew <- kerenSPE$cellType  # Select for all cells that express higher than baseline level of p53 p53Pos = assay(kerenSPE)[\"p53\",] > -0.300460  # Find p53+ tumour cells kerenSPE$cellTypeNew[kerenSPE$cellType %in% tumour] <- \"Tumour\" kerenSPE$cellTypeNew[p53Pos & kerenSPE$cellType %in% tumour] <- \"p53_Tumour\"  #Group all immune cells under the name \"Immune\"  kerenSPE$cellTypeNew[kerenSPE$cellType %in% immune] <- \"Immune\"   # Plot image 6  kerenSPE |>   colData() |>   as.data.frame() |>   filter(imageID == \"6\") |>   filter(cellTypeNew %in% c(\"Immune\", \"Tumour\", \"p53_Tumour\")) |>   arrange(cellTypeNew) |>   ggplot(aes(x = x, y = y, color = cellTypeNew)) +   geom_point(size = 1) +   scale_colour_manual(values = c(\"#505050\", \"#64BC46\",\"#D6D6D6\")) + guides(colour = guide_legend(title = \"Cell types\", override.aes = list(size=3)))"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-we-quantify-this-relationship","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Can I measure if two cell types are co-localised?","what":"How do we quantify this relationship?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Kontextual function accepts SingleCellExperiment object, single image, list images SingleCellExperiment object, gets passed cells argument. two cell types evaluated specified arguments. parent population must also specified parent argument, note parent cell population must include cell type. argument r specify radius cell relationship evaluated . Kontextual supports parallel processing, number cores can specified using cores argument. Kontextual can take single value multiple values argument test combinations arguments specified. can calculate relationships single radius.","code":"p53_Kontextual <- Kontextual(   cells = kerenSPE,   image = 6,   r = 100,   from = \"Immune\",   to = \"p53_Tumour\",   parent = c(\"p53_Tumour\", \"Tumour\"),   cellType = \"cellTypeNew\" )  p53_Kontextual"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-i-choose-a-radius","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Can I measure if two cell types are co-localised?","what":"How do I choose a radius?","title":"Unlocking single cell spatial omics analyses with scdney","text":"kontextCurve calculates L-function value Kontextual values range radii. kontextPlot plots values. points lie red line (expected pattern) localisation indicated radius, points lie red line dispersion indicated. seen following plot Kontextual able correctly identify localisation p53+ tumour cells immune cells example image certain range radii. original L-function able identify localisation value radii.","code":"curves <- kontextCurve(   cells = kerenSPE,   image = \"6\",   from = \"Immune\",   to = \"p53_Tumour\",   parent = c(\"p53_Tumour\", \"Tumour\"),   rs = seq(10, 510, 100),   cellType = \"cellTypeNew\",   cores = nCores )  kontextPlot(curves)"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-i-quantitatively-identify-these-function-dictated-spatial-patterns-across-all-my-images","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Can I measure if two cell types are co-localised?","what":"How do I quantitatively identify these function-dictated spatial patterns across all my images?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Alternatively pairwise cell relationships corresponding parents dataset can tested. data frame pairwise combinations can creating using parentCombinations function. function takes vector cells, well parent vectors set earlier. shown output data frame specifying , , parent arguments Kontextual. Rather specifying , , parent Kontextual, output parentCombinations can input Kontextual using parentDf argument, examine pairwise relationships dataset. chunk take significant amount time run (~20 minutes), demonstration results saved loaded .","code":"# Get all relationships between cell types and their parents parentDf <- parentCombinations(   all = all,   tumour,   bcells,   tcells,   myeloid,   endothelial,   mesenchymal,   tissue,   immune ) # Running Kontextual on all relationships across all images. kerenKontextual <- Kontextual(   cells = kerenSPE,   parentDf = parentDf,   r = 50,   cores = nCores ) load(system.file(\"extdata\", \"kerenKontextual.rda\", package = \"ScdneySpatial\"))"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"are-these-spatial-patterns-associated-with-survival-outcomes","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Can I measure if two cell types are co-localised?","what":"Are these spatial patterns associated with survival outcomes?","title":"Unlocking single cell spatial omics analyses with scdney","text":"examine whether features obtained Statial associated patient outcomes groupings, can use colTest function SpicyR. understand survival outcomes differ significantly 2 patient groups, specify type = \"survival\" colTest. examine features associated patient survival using Kontextual values example. , survival data extracted kerenSPE converted survival object kerenSurv. addition , Kontextual results must converted data.frame wide matrix, can done using prepMatrix. Note, extract original L-function values, specify column = \"original\" prepMatrix. Finally, Kontextual matrix survival object passed colTest, type = \"survival\" obtain survival results. can see results CD8_T_cell__Keratin_Tumour__immune significant pairwise relationship contributes patient survival. relationship CD8 T cells Keratin+ Tumour cells, relative parent population immune cells. can see negative coefficient associated relationship, tells us decrease localisation CD8_T_cell Keratin+ Tumour leads poorer survival outcomes patients. can visualise association sing Kaplan-Meier curve. must first extract Kontextual values relationship across images. Next determine CD8 T cells Keratin+ Tumours relatively attracted avoiding image, comparing Kontextual value image median Kontextual value. Finally plot Kaplan-Meier curve using ggsurvfit package. shown , CD8 T cells Keratin+ Tumours relatively dispersed one another, patients tend worse survival outcomes.","code":"# Extracting survival data survData = kerenSPE |>     colData() |>      data.frame() |>      select(imageID, Survival_days_capped., event, RECURRENCE_LABEL) |>      unique()  # Creating survival vector kerenSurv = Surv(survData$Survival_days_capped, survData$event) names(kerenSurv) = survData$imageID # Converting Kontextual result into data matrix kontextMat = prepMatrix(kerenKontextual)  # Ensuring rownames of kontextMat match up with rownames of the survival vector  kontextMat = kontextMat[names(kerenSurv), ]  # Replace NAs with 0 kontextMat[is.na(kontextMat )] <- 0 # Running survival analysis survivalResults = spicyR::colTest(kontextMat, kerenSurv, type = \"survival\")   head(survivalResults) # Selecting most significant relationship survRelationship = kontextMat[[\"CD8_T_cell__Keratin_Tumour__immune\"]] survRelationship = ifelse(survRelationship > median(survRelationship), \"Localised\", \"Dispersed\")      # Plotting Kaplan-Meier curve survfit2(kerenSurv ~ survRelationship) |>     ggsurvfit() +     add_pvalue() +     ggtitle(\"CD8_T_cell__Keratin_Tumour__immune\")"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"are-there-changes-in-cell-states-associated-with-cell-localisation","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis","what":"Are there changes in cell states associated with cell localisation?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Changes cell phenotype can analytically framed change abundance gene protein within particular cell type. can analytically determine whether continuous changes occur cell’s proteomic transcriptomic signature changes occur spatial proximity another cell type. figures see expression marker increased cell type grows closer spatial proximity cell type B. can quantified scatterplot determine statistical significance. next section workshop, exploring analytical functionalities Statial can uncover continuous changes cell state.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-we-identify-specific-marker-changes-when-distinct-cell-types-increase-or-decrease-in-spatial-proximity","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Are there changes in cell states associated with cell localisation?","what":"How do we identify specific marker changes when distinct cell types increase or decrease in spatial proximity?","title":"Unlocking single cell spatial omics analyses with scdney","text":"first step analysing changes calculate spatial proximity (getDistances) abundance (getAbundances) cell every cell type. values stored reducedDims slot SpatialExperiment object names distances abundances respectively. First, let’s examine effect observed earlier Kontextual. avoid redefining cell types ’ll examine distance p53-positive tumour cells macrophages context total keratin/tumour cells image 6. Statial provides two main functions assess relationship - calcStateChanges plotStateChanges. can use calcStateChanges examine relationship 2 cell types 1 marker specific image. Similar Kontextual, can specify two cell types arguments, marker interest marker argument. can appreciate fdr statistic relationship significant, negative coef, coefficient value, indicating expression p53 keratin/tumour cells decreases distance macrophages increases. Statial provides convenient function visualising relationship - plotStateChanges. Similar Kontextual calcStateChanges, can specify cell types evaluated arguments marker interest marker. analysis, can observe keratin/tumour cells closer group macrophages tend higher expression p53, observed first graph. relationship quantified second graph, showing overall decrease p53 expression keratin/tumour cells distance macrophages increase. results allow us essentially arrive result Kontextual, calculated localisation p53+ keratin/tumour cells macrophages wider context keratin/tumour cells. Question information form analysis provide Kontextual ? observation localisation consistent across images? Can find interaction coefficient positive? .e. marker expression cell type rises distances increases cell type.","code":"kerenSPE <- getDistances(kerenSPE,                     maxDist = 200)  kerenSPE <- getAbundances(kerenSPE,                      r = 50) reducedDim(kerenSPE, \"abundances\")[is.na(reducedDim(kerenSPE, \"abundances\"))] <- 0 stateChanges <- calcStateChanges(   cells = kerenSPE,   type = \"distances\",   image = \"6\",   from = \"Keratin_Tumour\",   to = \"Macrophages\",   marker = \"p53\")  stateChanges p <- plotStateChanges(   cells = kerenSPE,   type = \"distances\",   image = \"6\",   from = \"Keratin_Tumour\",   to = \"Macrophages\",   marker = \"p53\",   size = 1,   shape = 19,   interactive = FALSE,   plotModelFit = FALSE,   method = \"lm\")  p$image  p$scatter +    labs(y = \"p53 expression in Keratin_Tumour\",        x = \"Distance of Keratin_Tumour to Macrophages\")"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"can-we-repeat-this-analysis-across-all-images-to-identify-global-relationships","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Are there changes in cell states associated with cell localisation?","what":"Can we repeat this analysis across all images to identify global relationships?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Beyond looking single cell--cell interactions single image, can also look interactions across images. calcStateChanges function provided Statial can expanded exact purpose - specifying cell types, marker, image, calcStateChanges examine significant correlations distance marker expression across entire dataset. , ’ve calculated state changes across images case like play, first ’ll taking closer examination significant interactions found within image 6 Keren et al. dataset. image 6, majority top 10 significant interactions occur keratin/tumour cells immune population, many interactions appear involve HLA class ligand. can examine interactions plotStateChanges function. Taking closer examination relationship macrophages keratin/tumour HLA class expression, plot shows us clear visual correlation - macrophage density increases, keratin/tumour cells increase expression HLA class . Biologically, HLA Class ligand exists nucleated cells, tasked presenting internal cell antigens recognition immune system, marking aberrant cells destruction either CD8+ T cells NK cells. Now, can take look top 10 significant results across images. Immediately, can appreciate couple interactions appear bit strange. One significant interactions occurs B cells CD4 T cells, CD4 T cells found increase CD20 expression close proximity B cells. Biologically, CD20 highly specific ligand B cells, healthy circumstances usually expressed T cells. potentially artefact calcStateChanges? can examine image plotStateChanges function, indeed observe apparent localisation B cells T cells. Question interactions think might make biological sense? relationship T cell CD20 expression B cell proximity occur across images? majority significant interactions occurring image 35? HINT: Configure parameters plotStateChanges examine significant interactions. look like artefacts? T cells expressing CD20? brings us key limitation cell segmentation.","code":"stateChanges <- calcStateChanges(   cells = kerenSPE,   type = \"distances\",   minCells = 100)  stateChanges |>    filter(imageID == 6) |>   head(n = 10) p <- plotStateChanges(   cells = kerenSPE,   type = \"distances\",   image = \"6\",   from = \"Keratin_Tumour\",   to = \"Macrophages\",   marker = \"HLA_Class_1\",   size = 1,   shape = 19,   interactive = FALSE,   plotModelFit = FALSE,   method = \"lm\")  p$image   p$scatter +    labs(y = \"HLA_Class_1 expression in Keratin_Tumour\",        x = \"Distance of Keratin_Tumour to Macrophages\") stateChanges |> head(n = 10) p <- plotStateChanges(   cells = kerenSPE,   type = \"distances\",   image = \"35\",   from = \"CD4_T_cell\",   to = \"B_cell\",   marker = \"CD20\",   size = 1,   shape = 19,   interactive = FALSE,   plotModelFit = FALSE,   method = \"lm\")  p$image +    labs(y = \"CD20 expression in CD4_T_cell\",        x = \"Distance of B_cell to CD4_T_cell\")  p$scatter"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-we-deal-with-lateral-cell-spill-over","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Are there changes in cell states associated with cell localisation?","what":"How do we deal with lateral cell spill over?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Contamination, specifically known lateral marker spill , issue results cell’s marker expressions wrongly attributed another adjacent cell. issue arises incorrect segmentation components one cell wrongly determined belonging another cell. Alternatively, issue can arise antibodies used tag measure marker expressions latch properly cell interest, thereby resulting residual markers wrongly assigned belonging cell near intended target cell. important either correct account incorrect attribution markers modelling process. critical understanding whether significant cell-cell interactions detected artifact technical measurement errors driven spill real biological changes represent shift cell’s state.  circumvent problem, Statial provides function predicts probability cell particular cell type - calcContamination. calcContamination returns dataframe probabilities demarcating chance cell particular cell type. dataframe stored contaminations reducedDim slot SpatialExperiment object. also provides rfMainCellProb column, provides probability cell indeed cell type designated. E.g. cell designated CD8+ T cell, rfMainCellProb give 80% chance cell indeed CD8+ T cell, due contamination. can introduce probabilities covariates linear model setting contamination = TRUE parameter calcStateChanges function. However, perfect solution issue contamination. can see, despite factoring contamination linear model, correlation B cell density CD20 expression CD4+ T cells remains one significant interactions model. However, mean factoring contamination linear model ineffective. general, cell type specific markers CD68, CD45, CD20 change cells specific . Therefore, relationships detected significant involving cell type markers likely false positives treated purposes evaluation. Plotting relationship false positives true positives, ’d expect contamination correction greatest relationships detected significant. , zoom ROC curve top 100 lowest p values occur, indeed see true positives false positives contamination correction. Question can conclude ROC graphs?","code":"kerenSPE <- calcContamination(kerenSPE)  stateChangesCorrected <- calcStateChanges(   cells = kerenSPE,   type = \"distances\",   minCells = 100,   contamination = TRUE)  stateChangesCorrected |> head(n = 20) cellTypeMarkers <- c(\"CD3\", \"CD4\", \"CD8\", \"CD56\", \"CD11c\", \"CD68\", \"CD45\", \"CD20\")  values = c(\"blue\", \"red\") names(values) <- c(\"None\", \"Corrected\")  df <- rbind(data.frame(TP =cumsum(stateChanges$marker %in% cellTypeMarkers), FP = cumsum(!stateChanges$marker %in% cellTypeMarkers), type = \"None\"),             data.frame(TP =cumsum(stateChangesCorrected$marker %in% cellTypeMarkers), FP = cumsum(!stateChangesCorrected$marker %in% cellTypeMarkers), type = \"Corrected\"))  ggplot(df, aes(x = TP, y = FP, colour = type)) + geom_line()+ labs(y = \"Cell state marker\", x = \"Cell type marker\") + scale_colour_manual(values = values) ggplot(df, aes(x = TP, y = FP, colour = type)) + geom_line()+ xlim(0,100) + ylim(0,1000)+ labs(y = \"Cell state marker\", x = \"Cell type marker\") + scale_colour_manual(values = values)"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"are-these-cell-type---marker-relationships-predictive-or-survival-outcomes","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis > Are there changes in cell states associated with cell localisation?","what":"Are these cell type - marker relationships predictive or survival outcomes?","title":"Unlocking single cell spatial omics analyses with scdney","text":"Similiar Kontextual, can run similar survival analysis using state changes results. , prepMatrix extracts coefficients, coef column stateChanges default. use t values instead, specify column = \"tval\" prepMatrix function. Question survival results distance abundance metrics? survival results change contamination correction? might survival results look /different distance abundance? state changes results, Macrophages__CD4_T_cell__CD138 significant pairwise relationship contributes patient survival. , relationship CD138 expression macrophages spatial proximity CD4 T cells change. positive coeffcient associated relationship tells us lower CD138 expression macrophages nearby CD4 T cells lead poorer survival outcomes patients. Question coefficients interpreted? relationships makes sense? visualise representative images?","code":"# Preparing features for Statial stateMat <- prepMatrix(stateChanges)  # Ensuring rownames of stateMat match up with rownames of the survival vector stateMat <- stateMat[names(kerenSurv), ]  # Remove some very small values stateMat <- stateMat[,colMeans(abs(stateMat)>0.0001)>.8]  survivalResults <- colTest(stateMat, kerenSurv, type = \"survival\")  head(survivalResults) # Selecting the most significant relationship survRelationship = stateMat[[\"Macrophages__CD4_T_cell__CD138\"]] survRelationship = ifelse(survRelationship > median(survRelationship), \"Higher expressed in close cells\", \"Lower expressed in close cells\")      # Plotting Kaplan-Meier curve survfit2(kerenSurv ~ survRelationship) |>     ggsurvfit() +     add_pvalue() +     ggtitle(\"Macrophages__CD4_T_cell__CD138\")"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"how-do-we-generate-a-molecular-representation-for-each-individual","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis","what":"How do we generate a molecular representation for each individual?","title":"Unlocking single cell spatial omics analyses with scdney","text":"next section workshop dedicated scFeatures - straightforward package generating suite molecular representations regarding patient, taking matrix proteins x cells input. molecular representation interpretable hence facilitates downstream analysis individual. general, scFeatures generates features across six categories representing different molecular views cellular characteristics. include: cell type proportions cell type specific gene expressions cell type specific pathway expressions cell type specific cell-cell interaction (CCI) scores overall aggregated gene expressions spatial metrics different types features constructed enable comprehensive multi-view understanding individual matrix spot x cells. default, function generate total 13 different types features (feature_types) shown store list. generated feature types stored matrix samples x features. different ways can use scFeatures generate molecular representations individuals requires following information spatial data. data, sample, X coordinates, Y coordinates, feature_types, type total 13 different types features (feature_types) can choose generate. argument type refers type input data . either scrna (single-cell RNA-sequencing data), spatial_p (spatial proteomics data), spatial_t (single cell spatial data). Suppose interested determining proportion cell type individual within region. necessary specify type = spatial_p reflect spatial proteomics data feature_types = proportion_raw indicate intend calculate cell type proportion region-specific sub-cell types. output scFeatures, scfeatures_result, list 13 dataframes, represent different molecular feature patient. , give example visualisation raw cell type proportions patient.","code":"##  [1] \"proportion_raw\"       \"proportion_logit\"     \"proportion_ratio\"     ##  [4] \"gene_mean_celltype\"   \"gene_prop_celltype\"   \"gene_cor_celltype\"    ##  [7] \"gene_mean_bulk\"       \"gene_prop_bulk\"       \"gene_cor_bulk\"        ## [10] \"L_stats\"              \"celltype_interaction\" \"morans_I\"             ## [13] \"nn_correlation\" matrix <- assay(kerenSPE, \"intensities\") |> as.matrix() sample <- kerenSPE$imageID celltype <- kerenSPE$cellType spatialCoords <- lapply(seq_len(ncol(spatialCoords(kerenSPE))), function(i) spatialCoords(kerenSPE)[,i])   scfeatures_result <- scFeatures(matrix, type = \"spatial_p\",                                 sample = sample, celltype = celltype, spatialCoords = spatialCoords,                                 ncores = 32) load(system.file(\"extdata\", \"scfeaturesResult.rda\", package = \"ScdneySpatial\")) data.frame(scfeatures_result[[1]][1:5, 1:5]) feature <- scfeatures_result$proportion_raw  feature$patient <- unlist(lapply(strsplit(rownames(feature), \"_cond_\"), `[`, 1)) feature$condition <- unlist(lapply(strsplit(rownames(feature), \"_cond_\"), `[`, 2))  feature <- as.data.frame(melt(feature, id=c(\"patient\", \"condition\")))  ggplot(feature , aes(x = patient , y = value , fill = variable)) +      geom_bar(stat=\"identity\") +    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +    ggtitle(\"Proportion raw feature\")"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"can-i-identify-molecular-signatures-for-localised-lesion-or-tumour-regions-in-my-data","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis","what":"Can I identify molecular signatures for localised lesion or tumour regions in my data?","title":"Unlocking single cell spatial omics analyses with scdney","text":"can cluster areas similar spatial interactions identify regions using lisaClust package Bioconductor. set k = 5 identify 5 regions. Keren et al. dataset, ’re effectively aiming separate 3 regions: - Non-tumour regions - Tumour regions - Tumour-immune interaction regions. ways can check region clustering worked effectively? One way can use hatchingPlot function visualise regions identified lisaClust. can appreciate regions separated nicely image 5, region 1 clearly tumour region, region 5 non-tumour region, region 3 tumour-immune interaction region. can also use regionMap function get quantitative determination region represents, look cell types encountered regions.","code":"set.seed(51773)  # Preparing features for lisaClust kerenSPE <- lisaClust::lisaClust(kerenSPE, k = 5) # Use hatching to visualise regions and cell types. lisaClust::hatchingPlot(kerenSPE,   useImages = \"5\",   line.spacing = 41, # spacing of lines   nbp = 100 # smoothness of lines ) regionMap(kerenSPE)"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"changes-in-marker-means","dir":"Articles","previous_headings":"Workshop > Module 6: Multi-sample analysis","what":"Changes in marker means","title":"Unlocking single cell spatial omics analyses with scdney","text":"Statial provides functionality identify average marker expression given cell type given region, using getMarkerMeans function. Similar analysis , features can also used survival analysis.","code":"cellTypeRegionMeans <- getMarkerMeans(kerenSPE,                               imageID = \"imageID\",                               cellType = \"cellType\",                               region = \"region\")  survivalResults = colTest(cellTypeRegionMeans[names(kerenSurv),], kerenSurv, type = \"survival\")  head(survivalResults)"},{"path":"https://sydneybiox.github.io/ScdneySpatial/articles/workshop_material.html","id":"module-7-patient-classification","dir":"Articles","previous_headings":"Workshop","what":"Module 7: Patient classification","title":"Unlocking single cell spatial omics analyses with scdney","text":"Finally demonstrate can use Bioconductor package ClassifyR perform patient classification features generated Statial scFeatures. addition , also calculate cell type proportions region proportions using getProp function spicyR. perform 5 fold cross validation 20 repeats, using CoxPH model survival classification. prepare metrics classification, first must convert dataframes matrix format. can accomplished, earlier, prepMatrix function Statial. generated matrices Kontextual distance metric SpatioMark earlier, now generating matrices SpatioMark corrected distance metric, abundance metrics. can also prepare metric region proportions, look whether percentage area region occupies image capable predicting survival. compile matrices list. scFeatures conveniently provides metrics part list matrices already, allowing us easily combine Statial metrics scFeatures 1 list matrices. input list crossValidate function ClassifyR, specifying survival object created earlier, 5 folds cross validation 20 repeats. also using feature selection algorithm selecting 10 features metric. Next, use performancePlot function assess C-index repeat 5-fold cross-validation. Unfortunately, spatial metrics outperform simpler metrics generated scFeatures, particularly gene_mean_bulk, simply produces matrix describing average gene expression marker patient. examine another variable might interest, used recurrence another outcome determine whether spatial metrics uncover signal. , using performancePlot, time recurrence, found better performance select spatial metrics. Questions Discuss among table spatial metrics might perform better recurrence compared survival.","code":"## Distances Corrected Matrix stateMatCorDist <- prepMatrix(stateChangesCorrected) stateMatCorDist <- stateMatCorDist[names(kerenSurv), ] stateMatCorDist[is.na(stateMatCorDist)] <- 0 # Remove some very small values stateMatCorDist <- stateMatCorDist[,colMeans(abs(stateMatCorDist)>0.0001)>.8]  reducedDim(kerenSPE, \"abundances\")[is.na(reducedDim(kerenSPE, \"abundances\"))] <- 0 ## Abundances stateChangesAbund <- calcStateChanges(   cells = kerenSPE,   type = \"abundances\",   minCells = 100)  stateMatAbund <- prepMatrix(stateChangesAbund) stateMatAbund <- stateMatAbund[names(kerenSurv), ] stateMatAbund[is.na(stateMatAbund)] <- 0 # Remove some very small values stateMatAbund <- stateMatAbund[,colMeans(abs(stateMatAbund)>0.0001)>.8]  ## Abundances Corrected stateChangesCorrectedAbund <- calcStateChanges(   cells = kerenSPE,   type = \"abundances\",   minCells = 100,   contamination = TRUE)  stateMatCorAbund <- prepMatrix(stateChangesCorrectedAbund) stateMatCorAbund <- stateMatCorAbund[names(kerenSurv), ] stateMatCorAbund[is.na(stateMatCorAbund)] <- 0 # Remove some very small values stateMatCorAbund <- stateMatCorAbund[,colMeans(abs(stateMatCorAbund)>0.0001)>.8]  ## Region proportions regionProp <- getProp(kerenSPE,                         feature = \"region\",                        imageID = \"imageID\") statialFeatureList <- list(`SpatioMark Distances` = stateMat,                            `SpatioMark Corrected Distances` = stateMatCorDist,                            `SpatioMark Abundances` = stateMatAbund,                            `SpatioMark Corrected Abundances` = stateMatCorAbund,                            `Kontextual` = kontextMat,                            `Region Marker Means` = cellTypeRegionMeans,                            `Region Proportions` = regionProp)  set.seed(51773)  featureList <- c(statialFeatureList, scfeatures_result) featureList <- lapply(featureList, function(x)x[names(kerenSurv),])  kerenCV = crossValidate(   measurements = featureList,   outcome = kerenSurv,   classifier = \"CoxPH\",   selectionMethod  = \"CoxPH\",   nFolds = 5,   nFeatures = 10,   nRepeats = 20,   nCores = nCores ) load(system.file(\"extdata\", \"featureList.rda\", package = \"ScdneySpatial\")) load(system.file(\"extdata\", \"kerenCV.rda\", package = \"ScdneySpatial\")) performancePlot(kerenCV,   characteristicsList = list(x = \"Assay Name\"),   orderingList = list(\"Assay Name\" = c(names(statialFeatureList), names(scfeatures_result)))) +    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +   geom_rect(aes(xmin = 0, xmax = 5.5, ymin = -Inf, ymax = Inf), fill = \"red\", alpha = 0.2) +   geom_rect(aes(xmin = 5.5, xmax = 7.5, ymin = -Inf, ymax = Inf), fill = \"yellow\", alpha = 0.2) +   geom_rect(aes(xmin = 7.5, xmax = 16.5, ymin = -Inf, ymax = Inf), fill = \"blue\", alpha = 0.2) +   geom_rect(aes(xmin = 16.5, xmax = 21, ymin = -Inf, ymax = Inf), fill = \"green\", alpha = 0.2) outcome <- survData$RECURRENCE_LABEL names(outcome) <- survData$imageID  outcome <- factor(outcome)  featureList <- lapply(featureList, function(x)x[names(outcome),])  kerenCV_recurrence = crossValidate(   measurements = featureList,   outcome = outcome,   classifier = \"elasticNetGLM\",   selectionMethod = \"auto\",   nFolds = 5,   nFeatures = 10,   nRepeats = 20,   nCores = nCores ) load(system.file(\"extdata\", \"recurrenceCV.rda\", package = \"ScdneySpatial\")) performancePlot(kerenCV_recurrence,   characteristicsList = list(x = \"Assay Name\"),   orderingList = list(\"Assay Name\" = c(names(statialFeatureList), names(scfeatures_result)))) +    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +   geom_rect(aes(xmin = 0, xmax = 5.5, ymin = -Inf, ymax = Inf), fill = \"red\", alpha = 0.2) +   geom_rect(aes(xmin = 5.5, xmax = 7.5, ymin = -Inf, ymax = Inf), fill = \"yellow\", alpha = 0.2) +   geom_rect(aes(xmin = 7.5, xmax = 16.5, ymin = -Inf, ymax = Inf), fill = \"blue\", alpha = 0.2) +   geom_rect(aes(xmin = 16.5, xmax = 21, ymin = -Inf, ymax = Inf), fill = \"green\", alpha = 0.2) sessionInfo()"},{"path":"https://sydneybiox.github.io/ScdneySpatial/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Farhan Ameen. Author, maintainer. Alex Qin. Author. Nick Robertson. Author. Shila Ghazanfar. Author. Ellis Patrick. Author.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ameen F, Qin , Robertson N, Ghazanfar S, Patrick E (2023). ScdneySpatial: Unlocking single cell spatial omics analyses scdney. R package version 2.0.0, https://sydneybiox.github.io/ScdneySpatial/.","code":"@Manual{,   title = {ScdneySpatial: Unlocking single cell spatial omics analyses with scdney},   author = {Farhan Ameen and Alex Qin and Nick Robertson and Shila Ghazanfar and Ellis Patrick},   year = {2023},   note = {R package version 2.0.0},   url = {https://sydneybiox.github.io/ScdneySpatial/}, }"},{"path":"https://sydneybiox.github.io/ScdneySpatial/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"ScdneySpatial","text":"Understanding interplay different types cells immediate environment critical understanding mechanisms cells function context human diseases. Recent advances high dimensional situ cytometry technologies fundamentally revolutionized ability observe complex cellular relationships providing unprecedented characterisation cellular heterogeneity tissue environment.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"ScdneySpatial","text":"tutorial introduce analytical framework analysing data high dimensional spatial omics technologies , CODEX, CycIF, IMC High Definition Spatial Transcriptomics. framework makes use functionality Bioconductor packages simpleSeg, scHot, FuseSOM, spicyR, listClust, statial, scFeatures ClassifyR. end tutorial attendees able implement assess key steps spatial analysis pipeline including cell segmentation, feature normalisation, cell type identification, microenvironment cell-state characterisation, spatial hypothesis testing patient classification. Understanding key steps provide attendees core skills needed interrogate comprehensive spatial information generated exciting new technologies.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/index.html","id":"pre-requisites","dir":"","previous_headings":"Description","what":"Pre-requisites","title":"ScdneySpatial","text":"expected students : basic knowledge R syntax, familiarity SingleCellExperiment /SpatialExperiment objects, workshop provide -depth description cell-resolution spatial omics technologies.","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/index.html","id":"time-outline","dir":"","previous_headings":"Description","what":"Time outline","title":"ScdneySpatial","text":"expected timing workshop:","code":""},{"path":"https://sydneybiox.github.io/ScdneySpatial/index.html","id":"learning-objectives","dir":"","previous_headings":"Description","what":"Learning objectives","title":"ScdneySpatial","text":"Understand visualise spatial omics datasets. Identify key biological questions can addressed technologies spatial analysis. Understand key analytical steps involved spatial omics analysis, perform steps using R. Evaluate performance data normalisation cell segmentation. Understand generate individual feature representations spatial omics data. Develop appreciation assess performance classification models. Perform disease outcome prediction using feature representation robust classification framework.","code":""}]
